Name:           atelerix
Version:        0.2.18
Release:        1
Summary:        A simple atelerix example package.

Group:          System Environment/Base
License:        empty
URL:            http://www.renesys.com/
Source0:        %{name}-%{version}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(id -u -n)
BuildArch:	noarch
BuildRequires:  python
# BuildRequires:  postgresql-devel
# Requires:       SQLAlchemy

%description
An example of an atelerix-style package for easy building directly from a
source code management system.

%prep
%setup -q

%check
make tests

%build
make build

%install
rm -rf $RPM_BUILD_ROOT
make install DESTDIR=$RPM_BUILD_ROOT

%clean
rm -rf $RPM_BUILD_ROOT

# -- if you are sending along Python modules that you want system-installed
#    you can use a setup.py and call distribute to get them in the right place
#    then, you will probably want:
# %files -f INSTALLED_FILES
#

%files
%defattr(0644,root,root,0755)
%doc README RELEASE-NOTES docs/README.FAQ docs/PACKAGING-HOWTO.rst

%dir                   @PACKAGE_ETC@
%config(noreplace)     @PACKAGE_ETC@/main.conf
%dir                   @PACKAGE_ROOT@
%attr(755, root, root) @PACKAGE_ROOT@/atelerix-script

# %dir                   @PACKAGE_SHARE@
# %dir                   @PACKAGE_CACHE@

# -- subpackages are eminently possible; here's an example for creating
#    nagios plugins, shippable as binary RPMS under the name $(PACKAGE)-nagios

# %package nagios
# Group: Application/System
# Summary: nagios checks for your application
# 
# %description nagios
# nagios checks for your application 
# (subpackage Summary and %description are required.)
# 
# %files nagios
# %attr(0755, root, root)       @NAGIOS_PLUGINS@/some-service-specific-nagios-check


%changelog
* Wed Jul 22 2015 Martin A. Brown <martin@linux-ip.net> [0.2.15]
  - incorporating all patches from Renesys years
  - improving documentation and moving to its own directory

* Fri Jun 21 2013 Martin A. Brown <mabrown@renesys.com> [0.2.0-1]
  - source ('include') Makefile.build; no more PASSTHROUGH crap
  - eliminate several recursive calls to 'make' (speedup)
  - patch for tag/branch separately; MAJOR_VERSION, etc. (thx Paul)
  - add commented-out boilerplate for those using Python packages
  - remove depotlite and RELEASE_DIST entirely from build system
  - replace BUILD_TYPE (depotlite/conventional) with ENCLAVE (renesys)
  - generate substitute.py on demand (from Makefile)
  - for svn only, grouse if svn path and package name differ

* Mon Oct 18 2010 Martin A. Brown <mabrown@renesys.com> [0.1.27-1]
  - support for remote tagging/branching, refs #466

* Thu Apr  8 2010 Martin A. Brown <mabrown@renesys.com> [0.1.25-1]
  - adding support for pushing to OBS
  - adding sanity check that specfile.in is syntactically valid
  - improving documentation ('make help' output; comments on Makefile vars)

* Wed Mar 31 2010 Martin A. Brown <mabrown@renesys.com> [0.1.21-1]
  - addressing (Renesys internal) trac #39 [unknown as of 2015-07-16]

* Thu Jun 25 2009 Martin A. Brown <mabrown@renesys.com> [0.1.20-1]
  - put more things in dist, clean up better after package build

* Sat Feb 14 2009 Martin A. Brown <mabrown@renesys.com> [0.0.9]
  - initial work
